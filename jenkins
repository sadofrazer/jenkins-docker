#! /bin/bash
# chkconfig: 2345 90 10
# description: Jenkins Continuous Integration server
# processname: /usr/local/jenkins/jenkins.war
 
# Source function library.
. /etc/rc.d/init.d/functions
 
# Get network sysconfig.
. /etc/sysconfig/network
 
# Check that networking is up, otherwise we can't start
[ "${NETWORKING}" = "no" ] && exit 0
 
# Get the Jenkins sysconfig
[ -f /etc/sysconfig/jenkins ] && . /etc/sysconfig/jenkins
[ "${JENKINS_HOME}" = "" ] &&
  JENKINS_HOME=/usr/local/jenkins
[ "${JENKINS_USER}" == "" ] &&
  JENKINS_USER=jenkins
 
startup=${JENKINS_HOME}/start-jenkins.sh
shutdown=${JENKINS_HOME}/stop-jenkins.sh
export JAVA_HOME=/usr/local/java/
 
start(){
  echo -n $"Starting Jenkins service: "
  pid=`ps -ef | grep [j]enkins.war | wc -l`
  if [ $pid -gt 0 ]; then
    echo "Jenkins is already running"
    exit 1
  fi
  su - $JENKINS_USER -c $startup
  RETVAL=$?
  [ $RETVAL == 0 ] &&
    echo "Jenkins was started successfully." ||
    echo "There was an error starting Jenkins."
}
 
stop(){
  action $"Stopping Jenkins service: "
  pid=`ps -ef | grep [j]enkins.war | wc -l`
  if [ ! $pid -gt 0 ]; then
    echo "Jenkins is not running"
    exit 1
  fi
  su - $JENKINS_USER -c $shutdown
  RETVAL=$?
  [ $RETVAL == 0 ] &&
    echo "Jenkins was stopped successfully." ||
    echo "There was an error stopping Jenkins."
}
 
status(){
  pid=`ps -ef | grep [j]enkins.war | wc -l`
  if [ $pid -gt 0 ]; then
    echo "Jenkins is running..."
  else
    echo "Jenkins is stopped..."
  fi
}
 
restart(){
  stop
  sleep 5
  start
}
 
# Call functions as determined by args.
case "$1" in
start)
  start;;
stop)
  stop;;
status)
  status;;
restart)
  restart;;
*)
  echo $"Usage: $0 {start|stop|status|restart}"
  exit 1
esac
 
exit 0